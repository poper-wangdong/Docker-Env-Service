networks:
  default:

volumes:
  pg_data:
  redis_data:
  composer_cache:
  node16_usr_local: 
  node10_usr_local: 

services:
  nginx:
    image: nginx:${NGINX_VERSION:-alpine}
    ports:
      - ${NGINX_HTTP_HOST_PORT:-80}:80
      - ${NGINX_HTTPS_HOST_PORT:-443}:443
    volumes:
      # - ${NGINX_CONF_FILE:-./conf/nginx/nginx.conf}:/etc/nginx/nginx.conf:ro
      - ${NGINX_MIME_FILE:-./conf/nginx/mime.types}:/etc/nginx/mime.types
      - ${NGINX_LIB_DIR:-./conf/nginx/lib/}:/etc/nginx/lib/:ro
      - ${NGINX_LOG_DIR:-./logs/nginx/}:/var/log/nginx/:rw
      - ${NGINX_VHOST_DIR:-./conf/vhost/nginx/}:/etc/nginx/conf.d/:ro
      - ${PROJECT_DIR:-./projects/}:/var/www/html/:rw
      - /Users/imdong/Projects:/www:rw
    restart: always
    networks:
      - default
    environment:
      TZ: "${TZ:-CST}"

  redis:
    image: redis:${REDIS_VERSION:-alpine}
    ports:
      - "${REDIS_HOST_PORT:-6379}:6379"
    volumes:
      # - ${REDIS_CONF_FILE:-./conf/redis/redis.conf}:/etc/redis/redis.conf:ro
      - redis_data:/data/:rw
    environment:
      TZ: "${TZ:-CST}"
    restart: always
    networks:
      - default

  pgsql:
    image: postgis/postgis:17-3.5-alpine
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-pg_123456}"
      TZ: "${TZ:-CST}"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    restart: always
    networks:
      - default
    volumes:
      - pg_data:/var/lib/postgresql/data/

  php73:
    build:
      context: ./build
      dockerfile: ./php.Dockerfile
      args:
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES:-}
        PHP_VERSION: ${PHP73_VERSION:-7.3-fpm-alpine}
        COMPOSER_VERSION: ${COMPOSER_VERSION:-latest}
        PHP_EXTENSIONS: ${PHP73_EXTENSIONS:-}
        TZ: "${TZ:-CST}"
    volumes:
      - ${PROJECT_DIR:-./projects/}:/var/www/html/:rw
      - ${PHP73_PHP_CONF_FILE:-./conf/php/php.ini}:/usr/local/etc/php/php.ini:ro
      # - ${PHP82_FPM_CONF_FILE:-./conf/php82/php-fpm.conf}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP73_LOG_DIR:-./logs/php73/}:/var/log/php/
      # - ${COMPOSER_CONFIG_FILE:-./conf/composer/config.json}:/usr/local/composer/config.json
      - composer_cache:/usr/local/composer/
      # - composer_cache_jobs-wechat-app-backend:/var/www/html/jobs-wechat-app-backend/vendor
      # - composer_cache_world_travel_backend:/var/www/html/world_travel_backend/vendor
      - /Users/imdong/Projects:/www:rw
    environment:
      - PHP_CS_FIXER_IGNORE_ENV=1
    restart: always
    working_dir: /var/www/html/
    networks:
      - default

  php82:
    build:
      context: ./build
      dockerfile: ./php.Dockerfile
      args:
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES:-}
        PHP_VERSION: ${PHP82_VERSION:-8.2-fpm-alpine}
        COMPOSER_VERSION: ${COMPOSER_VERSION:-latest}
        PHP_EXTENSIONS: ${PHP82_EXTENSIONS:-}
        TZ: "${TZ:-CST}"
    volumes:
      - ${PROJECT_DIR:-./projects/}:/var/www/html/:rw
      - ${PHP82_PHP_CONF_FILE:-./conf/php/php.ini}:/usr/local/etc/php/php.ini:ro
      # - ${PHP82_FPM_CONF_FILE:-./conf/php82/php-fpm.conf}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP82_LOG_DIR:-./logs/php82/}:/var/log/php/
      # - ${COMPOSER_CONFIG_FILE:-./conf/composer/config.json}:/usr/local/composer/config.json
      - composer_cache:/usr/local/composer/
      # - composer_cache_jobs-wechat-app-backend:/var/www/html/jobs-wechat-app-backend/vendor
      # - composer_cache_world_travel_backend:/var/www/html/world_travel_backend/vendor
      - /Users/imdong/Projects:/www:rw
    environment:
      - PHP_CS_FIXER_IGNORE_ENV=1
    restart: always
    working_dir: /var/www/html/
    networks:
      - default

  node16:
    build:
      context: ./build
      dockerfile: ./node16.Dockerfile
      args:
        NODE_VERSION: ${NODE16_VERSION:-16.17.1}
        YARN_VERSION: ${NODE16_YARN_VERSION:-1.17.x}
    ports:
      - ${NODE_VITE_PORT:-5173}:5173
      - 4000:4000
    volumes:
      - node16_usr_local:/usr/local/lib/node_modules:rw
      - ${PROJECT_DIR:-./projects/}:/var/www/html/:rw
      - ${NODE_LOG_DIR:-./logs/node/}:/var/log/php/
      - /Users/imdong/Projects:/www:rw
    # restart: always
    # working_dir: /var/www/html/world_travel_backend
    # command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
    # command: ["npm", "run", "build"]
    command: ["sleep", "infinity"]
    networks:
      - default

  node10:
    build:
      context: ./build
      dockerfile: ./node10.Dockerfile
      args:
        NODE_VERSION: ${NODE10_VERSION:-10.16.0}
        YARN_VERSION: ${NODE10_YARN_VERSION:-1.22.x}
    ports:
      - ${NODE_VITE_PORT:-5174}:5174
    volumes:
      - node10_usr_local:/usr/local/lib/node_modules:rw
      - ${PROJECT_DIR:-./projects/}:/var/www/html/:rw
      - ${NODE_LOG_DIR:-./logs/node/}:/var/log/php/
      - /Users/imdong/Projects:/www:rw
    # restart: always
    # working_dir: /var/www/html/comiru-api
    # command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
    # command: ["npm", "run", "build"]
    command: ["sleep", "infinity"]
    networks:
      - default

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CREATE_TOPICS: "cdc:2:0"   #kafka启动后初始化一个有2个partition(分区)0个副本名叫kafeidou的topic 
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    depends_on:
      - zookeeper

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672" # 应用程序连接端口
      - "15672:15672" # 管理界面端口
    environment:
      RABBITMQ_DEFAULT_USER: admin # 默认用户名
      RABBITMQ_DEFAULT_PASS: password # 默认密码
    restart: always